"""primeira revisao

Revision ID: 41fcd8ae6116
Revises: 
Create Date: 2022-08-23 14:13:16.905875

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '41fcd8ae6116'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comentario')
    op.drop_table('aviso')
    op.drop_table('aluno_turma')
    op.drop_table('turma')
    op.drop_table('professor')
    op.drop_table('aluno')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comentario',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_aviso', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('autor_aluno', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('autor_professor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['autor_aluno'], ['aluno.id'], name='comentario_autor_aluno_fkey'),
    sa.ForeignKeyConstraint(['autor_professor'], ['professor.id'], name='comentario_autor_professor_fkey'),
    sa.ForeignKeyConstraint(['id_aviso'], ['aviso.id'], name='comentario_id_aviso_fkey'),
    sa.PrimaryKeyConstraint('id', name='comentario_pkey')
    )
    op.create_table('aviso',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('titulo', sa.VARCHAR(length=30), autoincrement=False, nullable=False),
    sa.Column('corpo', sa.VARCHAR(length=2000), autoincrement=False, nullable=False),
    sa.Column('autor', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tag', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('turma', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['autor'], ['professor.id'], name='aviso_autor_fkey'),
    sa.ForeignKeyConstraint(['turma'], ['turma.id'], name='aviso_turma_fkey'),
    sa.PrimaryKeyConstraint('id', name='aviso_pkey')
    )
    op.create_table('aluno',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('aluno_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('senha', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('numero_telefone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('dt_nascimento', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('matricula', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='aluno_pkey'),
    sa.UniqueConstraint('email', name='aluno_email_key'),
    sa.UniqueConstraint('matricula', name='aluno_matricula_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('turma',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('turma_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('professor', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ano', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('semestre', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nome_disciplina', sa.VARCHAR(length=75), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['professor'], ['professor.id'], name='turma_professor_fkey'),
    sa.PrimaryKeyConstraint('id', name='turma_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('aluno_turma',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('id_aluno', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id_turma', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_aluno'], ['aluno.id'], name='aluno_turma_id_aluno_fkey'),
    sa.ForeignKeyConstraint(['id_turma'], ['turma.id'], name='aluno_turma_id_turma_fkey'),
    sa.PrimaryKeyConstraint('id', name='aluno_turma_pkey'),
    sa.UniqueConstraint('id_aluno', name='aluno_turma_id_aluno_key'),
    sa.UniqueConstraint('id_turma', name='aluno_turma_id_turma_key')
    )
    op.create_table('professor',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('senha', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('numero_telefone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('dt_nascimento', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('matricula', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('is_coordenador', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='professor_pkey'),
    sa.UniqueConstraint('email', name='professor_email_key'),
    sa.UniqueConstraint('matricula', name='professor_matricula_key')
    )
    # ### end Alembic commands ###
